name: CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']
  schedule:
    - cron: "0 0 * * 0"

jobs:
  test_old:
    name: "Test/1.45"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        id: actions-rs
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.45
          override: true

      - name: Test
        run: cargo test --no-default-features

  check:
    strategy:
      matrix:
        rust:
          - 1.55
          - stable
          - nightly

    name: "Check/${{ matrix.rust }}"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        id: actions-rs
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Format
        run: cargo fmt --all -- --check

      - name: Lint
        run: cargo clippy -- -D warnings

      - name: Test
        run: cargo test

  doc:
    name: "Cargo doc"

    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        id: actions-rs
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Test
        run: RUSTDOCFLAGS="-D warnings --cfg docsrs" cargo +nightly doc --all-features --no-deps

  audit:
    name: "Cargo audit"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - run: cargo update

      - name: Audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  devskim:
    name: DevSkim
    runs-on: ubuntu-20.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run DevSkim scanner
        uses: microsoft/DevSkim-Action@v1

      - name: Upload DevSkim scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: devskim-results.sarif
